import React from "react";
import { Link } from "react-router-dom";

import DetailsPage from "@patternfly/react-component-groups/dist/esm/DetailsPage";
import {
  Breadcrumb,
  BreadcrumbItem,
  PageSection,
  Popover,
  TabAction,
} from "@patternfly/react-core";
import HelpIcon from "@patternfly/react-icons/dist/esm/icons/help-icon";

import { PathParam, useRouteParams } from "@app/Routes";
import { LoadingWrapper } from "@app/components/LoadingWrapper";
import { SeverityShieldAndText } from "@app/components/SeverityShieldAndText";
import { useFetchVulnerabilityById } from "@app/queries/vulnerabilities";

import { AdvisoriesByVulnerability } from "./advisories-by-vulnerability";
import { Overview } from "./overview";
import { PackagesByVulnerability } from "./packages-by-vulnerability";
import { SbomsByVulnerability } from "./sboms-by-vulnerability";
import { AIAssistant } from "../../components/ai-assistant";

export const CveDetails: React.FC = () => {
  const vulnerabilityId = useRouteParams(PathParam.VULNERABILITY_ID);

  const { vulnerability, isFetching, fetchError } =
    useFetchVulnerabilityById(vulnerabilityId);

  return (
    <>
      <AIAssistant
        viewing={`the details for vulnerability ${vulnerability?.identifier}`}
      />
      <PageSection variant="light">
        <DetailsPage
          breadcrumbs={
            <Breadcrumb>
              <BreadcrumbItem key="vulnerabilities">
                <Link to="/vulnerabilities">Vulnerabilities</Link>
              </BreadcrumbItem>
              <BreadcrumbItem isActive>Vulnerability details</BreadcrumbItem>
            </Breadcrumb>
          }
          actionButtons={[]}
          pageHeading={{
            title: vulnerability?.identifier ?? "",
            label: vulnerability?.average_severity
              ? {
                  children: (
                    <SeverityShieldAndText
                      value={vulnerability.average_severity}
                    />
                  ),
                  isCompact: true,
                }
              : undefined,
          }}
          tabs={[
            {
              eventKey: "overview",
              title: "Overview",
              children: (
                <div className="pf-v5-u-m-md">
                  <LoadingWrapper
                    isFetching={isFetching}
                    fetchError={fetchError}
                  >
                    {vulnerability && (
                      <Overview vulnerability={vulnerability} />
                    )}
                  </LoadingWrapper>
                </div>
              ),
            },
            {
              eventKey: "packages",
              title: "Packages",
              actions: (
                <>
                  <Popover
                    bodyContent={
                      <div>
                        Packages that are <strong>mentioned</strong> in the
                        current Vulnerability.
                      </div>
                    }
                    position="top"
                  >
                    <TabAction>
                      <HelpIcon />
                    </TabAction>
                  </Popover>
                </>
              ),
              children: (
                <div className="pf-v5-u-m-md">
                  <LoadingWrapper
                    isFetching={isFetching}
                    fetchError={fetchError}
                  >
                    {vulnerability && (
                      <PackagesByVulnerability
                        advisories={vulnerability.advisories}
                      />
                    )}
                  </LoadingWrapper>
                </div>
              ),
            },
            {
              eventKey: "sboms",
              title: "SBOMs",
              actions: (
                <>
                  <Popover
                    bodyContent={
                      <div>
                        SBOMs that are <strong>mentioned</strong> in the current
                        Vulnerability.
                      </div>
                    }
                    position="top"
                  >
                    <TabAction>
                      <HelpIcon />
                    </TabAction>
                  </Popover>
                </>
              ),
              children: (
                <div className="pf-v5-u-m-md">
                  <LoadingWrapper
                    isFetching={isFetching}
                    fetchError={fetchError}
                  >
                    {vulnerability && (
                      <SbomsByVulnerability
                        advisories={vulnerability.advisories}
                      />
                    )}
                  </LoadingWrapper>
                </div>
              ),
            },
            {
              eventKey: "advisories",
              title: "Advisories",
              actions: (
                <>
                  <Popover
                    bodyContent={
                      <div>
                        Advisories that explain the current Vulnerability
                      </div>
                    }
                    position="top"
                  >
                    <TabAction>
                      <HelpIcon />
                    </TabAction>
                  </Popover>
                </>
              ),
              children: (
                <div className="pf-v5-u-m-md">
                  <LoadingWrapper
                    isFetching={isFetching}
                    fetchError={fetchError}
                  >
                    {vulnerability && (
                      <AdvisoriesByVulnerability
                        advisories={vulnerability.advisories}
                      />
                    )}
                  </LoadingWrapper>
                </div>
              ),
            },
          ]}
        />
      </PageSection>
    </>
  );
};
